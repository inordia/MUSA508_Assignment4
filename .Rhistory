rm(list=ls())
palette5 <- c("#981FAC","#CB0F8B","#FF006A","#FE4C35","#FE9900")
palette4 <- c("#981FAC","#FF006A","#FE4C35","#FE9900")
palette2 <- c("#981FAC","#FF006A")
root.dir = "https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/DATA/"
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
housing<-read.csv("/Users/inordia/Desktop/UPenn搞起来/592/Assignment4/MUSA508_Assignment4/housingSubsidy.csv")
#Develop and interpret data visualizations that describe feature importance/correlation.
housing%>%
dplyr::select(y,age,previous,unemploy_rate,cons.price.idx, cons.conf.idx, inflation_rate, spent_on_repairs)%>%
gather(Variable, value, -y) %>%
ggplot(aes(y, value, fill=y)) +
geom_bar(position = "dodge", stat = "summary", fun.y = "mean") +
facet_wrap(~Variable, scales = "free") +
scale_fill_manual(values = palette2) +
labs(x="y", y="Value",
title = "Figure 1. Feature associations with the likelihood of y",
subtitle = "(continous outcomes)") +
theme(legend.position = "none")
#Engineer new features
housing.eng<-housing%>%
mutate(
age.cat=case_when(age < 30 ~ "age_30",
age >= 30 & age < 50 ~ "age30_50",
age >= 50 & age < 65 ~ "age50_65",
age >= 65 ~ "age65+"),
previous.cat = case_when(
previous == 0 ~ "previous0",
previous > 0 ~ "previousNOT0"),
conf.cat = case_when(
cons.conf.idx < -50 ~ "conf_50-",
cons.conf.idx >= -50 & cons.conf.idx < -45 ~ "conf-50_-45",
cons.conf.idx >= -45 & cons.conf.idx < -40 ~ "conf-45_-40",
cons.conf.idx >= -40 & cons.conf.idx < -35 ~ "conf-40_-35",
cons.conf.idx >= -35 & cons.conf.idx < -30 ~ "conf-35_-30",
cons.conf.idx >= -30 & cons.conf.idx < -25 ~ "conf-30_-25"),
price.cat=case_when(
cons.price.idx < 93 ~ "price93-",
cons.price.idx >= 93 & cons.price.idx < 93.5 ~ "price93_93.5",
cons.price.idx >= 93.5 & cons.price.idx < 94 ~ "price93.5_94",
cons.price.idx >= 94 & cons.price.idx < 94.5 ~ "price94_94.5",
cons.price.idx >= 94.5 ~ "price94.5+"),
inflation.cat = case_when(
inflation_rate >= 0.5 & inflation_rate < 1.5 ~ "inflation0.5_1.5",
inflation_rate >= 1.5 & inflation_rate < 2.5 ~ "inflation1.5_2.5",
inflation_rate >= 2.5 & inflation_rate < 3.5 ~ "inflation2.5_3.5",
inflation_rate >= 3.5 & inflation_rate < 4.5 ~ "inflation3.5_4.5",
inflation_rate >= 4.5 ~ "inflation4.5+"),
repair.cat=case_when(
spent_on_repairs < 5000 ~ "repair5000-",
spent_on_repairs >= 5000 & spent_on_repairs < 5100 ~ "repair5000_5100",
spent_on_repairs >= 5100 & spent_on_repairs < 5200 ~ "repair5100_5200",
spent_on_repairs >= 5200 ~ "repair5200+"),
season = case_when(
month == "mar"| month == "apr"| month == "may" ~ "Spring",
month == "jun" | month == "jul" | month == "aug"~ "Summer",
month == "sep"| month == "oct" | month == "nov" ~ "Fall",
month == "dec" ~ "Winter")
)
housing <-
housing %>%
mutate(education.cat = case_when(
education == "basic.4y" | education == "basic.6y" | education == "basic.9y" ~ "Basic",
education == "high.school" ~ "HighSchool",
education == "professional.course" ~ "Professional",
education == "university.degree" ~ "University",
education == "illiterate" ~ "Illiterate",
education == "unknown" ~ "Unknown"))
housing <-
housing %>%
mutate(education.bi = ifelse(education.cat == "Basic"|education.cat =="Illiterate", "Low",
"High"))
housing <- housing %>%
mutate(job.cat = ifelse(job == "self-employed"|job =="unemloyed", "Self_or_unemployed",
"Other"))
#Interpret your new features
housing.eng%>%
dplyr::select(y, age.cat, previous.cat, price.cat, conf.cat, inflation.cat, repair.cat,season, education.cat, education.bi,
campaign.cat, job.cat) %>%
gather(Variable, value, -y) %>%
count(Variable, value, y) %>%
ggplot(aes(value, n, fill = y)) +
geom_bar(position = "dodge", stat="identity") +
facet_wrap(~Variable, scales = "free") +
scale_fill_manual(values = palette2) +
labs(x="Churn", y="Count",
title = "Figure 6. New Feature associations with the likelihood of churn",
subtitle = "Two category features (Yes and No)")+
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5))
View(housing)
rm(list=ls())
palette5 <- c("#981FAC","#CB0F8B","#FF006A","#FE4C35","#FE9900")
palette4 <- c("#981FAC","#FF006A","#FE4C35","#FE9900")
palette2 <- c("#981FAC","#FF006A")
root.dir = "https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/DATA/"
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
housing<-read.csv("/Users/inordia/Desktop/UPenn搞起来/592/Assignment4/MUSA508_Assignment4/housingSubsidy.csv")
#Engineer new features
housing.eng<-housing%>%
mutate(
age.cat=case_when(age < 30 ~ "age_30",
age >= 30 & age < 50 ~ "age30_50",
age >= 50 & age < 65 ~ "age50_65",
age >= 65 ~ "age65+"),
previous.cat = case_when(
previous == 0 ~ "previous0",
previous > 0 ~ "previousNOT0"),
conf.cat = case_when(
cons.conf.idx < -50 ~ "conf_50-",
cons.conf.idx >= -50 & cons.conf.idx < -45 ~ "conf-50_-45",
cons.conf.idx >= -45 & cons.conf.idx < -40 ~ "conf-45_-40",
cons.conf.idx >= -40 & cons.conf.idx < -35 ~ "conf-40_-35",
cons.conf.idx >= -35 & cons.conf.idx < -30 ~ "conf-35_-30",
cons.conf.idx >= -30 & cons.conf.idx < -25 ~ "conf-30_-25"),
price.cat=case_when(
cons.price.idx < 93 ~ "price93-",
cons.price.idx >= 93 & cons.price.idx < 93.5 ~ "price93_93.5",
cons.price.idx >= 93.5 & cons.price.idx < 94 ~ "price93.5_94",
cons.price.idx >= 94 & cons.price.idx < 94.5 ~ "price94_94.5",
cons.price.idx >= 94.5 ~ "price94.5+"),
inflation.cat = case_when(
inflation_rate >= 0.5 & inflation_rate < 1.5 ~ "inflation0.5_1.5",
inflation_rate >= 1.5 & inflation_rate < 2.5 ~ "inflation1.5_2.5",
inflation_rate >= 2.5 & inflation_rate < 3.5 ~ "inflation2.5_3.5",
inflation_rate >= 3.5 & inflation_rate < 4.5 ~ "inflation3.5_4.5",
inflation_rate >= 4.5 ~ "inflation4.5+"),
repair.cat=case_when(
spent_on_repairs < 5000 ~ "repair5000-",
spent_on_repairs >= 5000 & spent_on_repairs < 5100 ~ "repair5000_5100",
spent_on_repairs >= 5100 & spent_on_repairs < 5200 ~ "repair5100_5200",
spent_on_repairs >= 5200 ~ "repair5200+"),
season = case_when(
month == "mar"| month == "apr"| month == "may" ~ "Spring",
month == "jun" | month == "jul" | month == "aug"~ "Summer",
month == "sep"| month == "oct" | month == "nov" ~ "Fall",
month == "dec" ~ "Winter")
)
housing.eng <-
housing.eng %>%
mutate(campaign.cat = case_when(
campaign >= 0 & campaign < 2  ~ "Once",
campaign >= 2 & campaign < 10  ~ "2 to 9 times",
campaign > 9                    ~ "More than 9 times"))
housing.eng <-
housing.eng %>%
mutate(education.cat = case_when(
education == "basic.4y" | education == "basic.6y" | education == "basic.9y" ~ "Basic",
education == "high.school" ~ "HighSchool",
education == "professional.course" ~ "Professional",
education == "university.degree" ~ "University",
education == "illiterate" ~ "Illiterate",
education == "unknown" ~ "Unknown"))
housing.eng <-
housing.eng %>%
mutate(education.bi = ifelse(education.cat == "Basic"|education.cat =="Illiterate", "Low",
"High"))
housing.eng <-
housing.eng %>%
mutate(job.cat = ifelse(job == "self-employed"|job =="unemloyed", "Self_or_unemployed",
"Other"))
#Interpret your new features
housing.eng%>%
dplyr::select(y, age.cat, previous.cat, price.cat, conf.cat, inflation.cat, repair.cat,season, education.cat, education.bi,
campaign.cat, job.cat) %>%
gather(Variable, value, -y) %>%
count(Variable, value, y) %>%
ggplot(aes(value, n, fill = y)) +
geom_bar(position = "dodge", stat="identity") +
facet_wrap(~Variable, scales = "free") +
scale_fill_manual(values = palette2) +
labs(x="Churn", y="Count",
title = "Figure 6. New Feature associations with the likelihood of churn",
subtitle = "Two category features (Yes and No)")+
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5))
#Split your data into a 65/35 training/test set.
set.seed(3456)
trainIndex <- createDataPartition(housing.eng$y,
y=paste(
housing.eng$education,
housing.eng$taxLien
),
p = .65,
list = FALSE,
times = 1)
housingTrain <- housing.eng[ trainIndex,]
housingTest  <- housing.eng[-trainIndex,]
#Show a regression summary for both the kitchen sink and your engineered regression.
#split the dataset into train/test
#kitchen sink
kitchenTrain<-housingTrain%>%
dplyr::select(y,y_numeric,age, previous, unemploy_rate,
cons.price.idx, cons.conf.idx, inflation_rate, spent_on_repairs,
job, marital, education,taxLien,
mortgage, taxbill_in_phl, contact, month,
day_of_week, campaign, pdays, poutcome)
kitchenTest<-housingTest%>%
dplyr::select(y,y_numeric,age, previous, unemploy_rate,
cons.price.idx, cons.conf.idx, inflation_rate, spent_on_repairs,
job.cat, marital, education.bi,taxLien,
mortgage, taxbill_in_phl, contact, month,
day_of_week, campaign.cat, pdays, poutcome)
#engineering
engTrain<-housingTrain%>%
dplyr::select(
y,y_numeric,age.cat, previous.cat, price.cat, conf.cat, inflation.cat,
job, marital, education,taxLien,
mortgage, taxbill_in_phl, contact,
day_of_week, campaign, pdays, season, poutcome
)
engTest<-housingTest%>%
dplyr::select(
y,y_numeric,age.cat, previous.cat, price.cat, conf.cat, inflation.cat,
job, marital, education,taxLien,
mortgage, taxbill_in_phl, contact,
day_of_week, campaign, pdays, season, poutcome
)
View(engTrain)
kitchenTest<-housingTest%>%
dplyr::select(y,y_numeric,age, previous, unemploy_rate,
cons.price.idx, cons.conf.idx, inflation_rate, spent_on_repairs,
job, marital, education,taxLien,
mortgage, taxbill_in_phl, contact, month,
day_of_week, campaign, pdays, poutcome)
#engineering
engTrain<-housingTrain%>%
dplyr::select(
y,y_numeric,age.cat, previous.cat, price.cat, conf.cat, inflation.cat,
job.cat, marital, education.bi,taxLien,
mortgage, taxbill_in_phl, contact,
day_of_week, campaign.cat, pdays, season, poutcome
)
engTest<-housingTest%>%
dplyr::select(
y,y_numeric,age.cat, previous.cat, price.cat, conf.cat, inflation.cat,
job.cat, marital, education.bi,taxLien,
mortgage, taxbill_in_phl, contact,
day_of_week, campaign.cat, pdays, season, poutcome
)
#engineered regression
eng.reg<-glm(y_numeric ~ .,
data=engTrain%>%
dplyr::select(-y),
family="binomial" (link="logit"))
summary(eng.reg)
eng.testProbs <- data.frame(Outcome = as.factor(engTest$y_numeric),
Probs = predict(eng.reg, engTest, type= "response"))
eng.testProbs <-
eng.testProbs %>%
mutate(predOutcome  = as.factor(ifelse(eng.testProbs$Probs > 0.5 , 1, 0)))
caret::confusionMatrix(eng.testProbs$predOutcome, eng.testProbs$Outcome,
positive = "1")
#engineering
engTrain<-housingTrain%>%
dplyr::select(
y,y_numeric,age.cat, previous.cat, price.cat, conf.cat, inflation.cat,
job.cat, marital, education.cat,taxLien,
mortgage, taxbill_in_phl, contact,
day_of_week, campaign, pdays, season, poutcome, repair.cat
)
engTest<-housingTest%>%
dplyr::select(
y,y_numeric,age.cat, previous.cat, price.cat, conf.cat, inflation.cat,
job.cat, marital, education.cat,taxLien,
mortgage, taxbill_in_phl, contact,
day_of_week, campaign, pdays, season, poutcome, repair.cat
)
eng.testProbs <- data.frame(Outcome = as.factor(engTest$y_numeric),
Probs = predict(eng.reg, engTest, type= "response"))
eng.testProbs <-
eng.testProbs %>%
mutate(predOutcome  = as.factor(ifelse(eng.testProbs$Probs > 0.5 , 1, 0)))
caret::confusionMatrix(eng.testProbs$predOutcome, eng.testProbs$Outcome,
positive = "1")
#engineered regression
eng.reg<-glm(y_numeric ~ .,
data=engTrain%>%
dplyr::select(-y),
family="binomial" (link="logit"))
summary(eng.reg)
eng.testProbs <- data.frame(Outcome = as.factor(engTest$y_numeric),
Probs = predict(eng.reg, engTest, type= "response"))
eng.testProbs <-
eng.testProbs %>%
mutate(predOutcome  = as.factor(ifelse(eng.testProbs$Probs > 0.5 , 1, 0)))
caret::confusionMatrix(eng.testProbs$predOutcome, eng.testProbs$Outcome,
positive = "1")
summary(eng.reg)
#engineering
engTrain<-housingTrain%>%
dplyr::select(
y,y_numeric,age.cat, previous.cat, price.cat, conf.cat, inflation.cat,
job.cat, marital, education.cat,taxLien,
mortgage, taxbill_in_phl, contact,
campaign, pdays, season, repair.cat
)
engTest<-housingTest%>%
dplyr::select(
y,y_numeric,age.cat, previous.cat, price.cat, conf.cat, inflation.cat,
job.cat, marital, education.cat,taxLien,
mortgage, taxbill_in_phl, contact,
campaign, pdays, season, repair.cat
)
#engineered regression
eng.reg<-glm(y_numeric ~ .,
data=engTrain%>%
dplyr::select(-y),
family="binomial" (link="logit"))
summary(eng.reg)
eng.testProbs <- data.frame(Outcome = as.factor(engTest$y_numeric),
Probs = predict(eng.reg, engTest, type= "response"))
eng.testProbs <-
eng.testProbs %>%
mutate(predOutcome  = as.factor(ifelse(eng.testProbs$Probs > 0.5 , 1, 0)))
caret::confusionMatrix(eng.testProbs$predOutcome, eng.testProbs$Outcome,
positive = "1")
engTrain<-housingTrain%>%
dplyr::select(
y,y_numeric,age.cat, previous.cat, price.cat, conf.cat, inflation.cat,
job.cat, marital, education.cat,taxLien,
mortgage, taxbill_in_phl, contact,
day_of_week, campaign, pdays, season, poutcome
)
engTest<-housingTest%>%
dplyr::select(
y,y_numeric,age.cat, previous.cat, price.cat, conf.cat, inflation.cat,
job.cat, marital, education.cat,taxLien,
mortgage, taxbill_in_phl, contact,
day_of_week, campaign, pdays, season, poutcome
)
#engineered regression
eng.reg<-glm(y_numeric ~ .,
data=engTrain%>%
dplyr::select(-y),
family="binomial" (link="logit"))
summary(eng.reg)
eng.testProbs <- data.frame(Outcome = as.factor(engTest$y_numeric),
Probs = predict(eng.reg, engTest, type= "response"))
eng.testProbs <-
eng.testProbs %>%
mutate(predOutcome  = as.factor(ifelse(eng.testProbs$Probs > 0.5 , 1, 0)))
caret::confusionMatrix(eng.testProbs$predOutcome, eng.testProbs$Outcome,
positive = "1")
engTrain<-housingTrain%>%
dplyr::select(
y,y_numeric,age.cat, previous.cat, price.cat, conf.cat, inflation.cat,
job.cat, marital, education.cat,taxLien,
mortgage, taxbill_in_phl, contact,
day_of_week, campaign.cat, pdays, season, poutcome
)
engTest<-housingTest%>%
dplyr::select(
y,y_numeric,age.cat, previous.cat, price.cat, conf.cat, inflation.cat,
job.cat, marital, education.cat,taxLien,
mortgage, taxbill_in_phl, contact,
day_of_week, campaign.cat, pdays, season, poutcome
)
#engineered regression
eng.reg<-glm(y_numeric ~ .,
data=engTrain%>%
dplyr::select(-y),
family="binomial" (link="logit"))
summary(eng.reg)
eng.testProbs <- data.frame(Outcome = as.factor(engTest$y_numeric),
Probs = predict(eng.reg, engTest, type= "response"))
eng.testProbs <-
eng.testProbs %>%
mutate(predOutcome  = as.factor(ifelse(eng.testProbs$Probs > 0.5 , 1, 0)))
caret::confusionMatrix(eng.testProbs$predOutcome, eng.testProbs$Outcome,
positive = "1")
engTrain<-housingTrain%>%
dplyr::select(
y,y_numeric,age.cat, previous.cat, price.cat, conf.cat, inflation.cat,
job.cat, marital, education.bi,taxLien,
mortgage, taxbill_in_phl, contact,
day_of_week, campaign.cat, pdays, season, poutcome
)
engTest<-housingTest%>%
dplyr::select(
y,y_numeric,age.cat, previous.cat, price.cat, conf.cat, inflation.cat,
job.cat, marital, education.bi,taxLien,
mortgage, taxbill_in_phl, contact,
day_of_week, campaign.cat, pdays, season, poutcome
)
#engineered regression
eng.reg<-glm(y_numeric ~ .,
data=engTrain%>%
dplyr::select(-y),
family="binomial" (link="logit"))
summary(eng.reg)
eng.testProbs <- data.frame(Outcome = as.factor(engTest$y_numeric),
Probs = predict(eng.reg, engTest, type= "response"))
eng.testProbs <-
eng.testProbs %>%
mutate(predOutcome  = as.factor(ifelse(eng.testProbs$Probs > 0.5 , 1, 0)))
caret::confusionMatrix(eng.testProbs$predOutcome, eng.testProbs$Outcome,
positive = "1")
rm(list=ls())
palette5 <- c("#981FAC","#CB0F8B","#FF006A","#FE4C35","#FE9900")
palette4 <- c("#981FAC","#FF006A","#FE4C35","#FE9900")
palette2 <- c("#981FAC","#FF006A")
root.dir = "https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/DATA/"
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
housing <- read.csv("/Users/inordia/Desktop/UPenn搞起来/592/Assignment4/MUSA508_Assignment4/housingSubsidy.csv")
housing %>%
dplyr::select(y, age, previous, unemploy_rate, cons.price.idx, cons.conf.idx, inflation_rate, spent_on_repairs) %>%
gather(Variable, value, -y) %>%
ggplot(aes(y, value, fill=y)) +
geom_bar(position = "dodge", stat = "summary", fun.y = "mean") +
facet_wrap(~Variable, scales = "free") +
scale_fill_manual(values = palette2) +
labs(x="y", y="Value",
title = "Feature associations with the likelihood of click",
subtitle = "(continous outcomes)") +
theme(legend.position = "none")
housing %>%
dplyr::select(y, age, previous, unemploy_rate, cons.price.idx, cons.conf.idx, inflation_rate, spent_on_repairs) %>%
gather(Variable, value, -y) %>%
ggplot() +
geom_density(aes(value, color=y), fill = "transparent") +
facet_wrap(~Variable, scales = "free") +
scale_fill_manual(values = palette2) +
labs(title = "Feature distributions take vs. no take",
subtitle = "(continous outcomes)")
housing <-
housing %>%
mutate(campaign.cat = case_when(
campaign >= 0 & campaign < 2  ~ "Once",
campaign >= 2 & campaign < 10  ~ "2 to 9 times",
campaign > 9                    ~ "More than 9 times"))
housing <-
housing %>%
mutate(education.cat = case_when(
education == "basic.4y" | education == "basic.6y" | education == "basic.9y" ~ "Basic",
education == "high.school" ~ "HighSchool",
education == "professional.course" ~ "Professional",
education == "university.degree" ~ "University",
education == "illiterate" ~ "Illiterate",
education == "unknown" ~ "Unknown"))
housing <-
housing %>%
mutate(education.bi = ifelse(education.cat == "Basic"|education.cat =="Illiterate", "Low",
"High"))
housing <- housing %>%
mutate(job.cat = ifelse(job == "self-employed"|job =="unemloyed", "Self_or_unemployed",
"Other"))
housing <- housing %>%
mutate(season = case_when(
month == "mar"| month == "apr"| month == "may" ~ "Spring",
month == "jun" | month == "jul" | month == "aug"~ "Summer",
month == "sep"| month == "oct" | month == "nov" ~ "Fall",
month == "dec" ~ "Winter"))
housing <-housing%>%
mutate(
age.cat=case_when(age < 30 ~ "age_30",
age >= 30 & age < 50 ~ "age30_50",
age >= 50 & age < 65 ~ "age50_65",
age >= 65 ~ "age65+"),
previous.cat = case_when(
previous == 0 ~ "previous0",
previous > 0 ~ "previousNOT0"),
conf.cat = case_when(
cons.conf.idx < -50 ~ "conf_50-",
cons.conf.idx >= -50 & cons.conf.idx < -45 ~ "conf-50_-45",
cons.conf.idx >= -45 & cons.conf.idx < -40 ~ "conf-45_-40",
cons.conf.idx >= -40 & cons.conf.idx < -35 ~ "conf-40_-35",
cons.conf.idx >= -35 & cons.conf.idx < -30 ~ "conf-35_-30",
cons.conf.idx >= -30 & cons.conf.idx < -25 ~ "conf-30_-25"),
price.cat=case_when(
cons.price.idx < 93 ~ "price93-",
cons.price.idx >= 93 & cons.price.idx < 93.5 ~ "price93_93.5",
cons.price.idx >= 93.5 & cons.price.idx < 94 ~ "price93.5_94",
cons.price.idx >= 94 & cons.price.idx < 94.5 ~ "price94_94.5",
cons.price.idx >= 94.5 ~ "price94.5+"),
inflation.cat = case_when(
inflation_rate >= 0.5 & inflation_rate < 1.5 ~ "inflation0.5_1.5",
inflation_rate >= 1.5 & inflation_rate < 2.5 ~ "inflation1.5_2.5",
inflation_rate >= 2.5 & inflation_rate < 3.5 ~ "inflation2.5_3.5",
inflation_rate >= 3.5 & inflation_rate < 4.5 ~ "inflation3.5_4.5",
inflation_rate >= 4.5 ~ "inflation4.5+"),
repair.cat=case_when(
spent_on_repairs < 5000 ~ "repair5000-",
spent_on_repairs >= 5000 & spent_on_repairs < 5100 ~ "repair5000_5100",
spent_on_repairs >= 5100 & spent_on_repairs < 5200 ~ "repair5100_5200",
spent_on_repairs >= 5200 ~ "repair5200+")
)
set.seed(3456)
trainIndex <- createDataPartition(housing$y,
y = paste(housing$taxLien,
housing$education),
p = .65,
list = FALSE,
times = 1)
housingTrain <- housing[ trainIndex,]
housingTest  <- housing[-trainIndex,]
housingModel.new <- glm(y_numeric ~ .,
data=housingTrain %>%
dplyr::select(y,y_numeric,age.cat, previous.cat, price.cat, conf.cat, inflation.cat,
job.cat, marital, education.bi,taxLien,
mortgage, taxbill_in_phl, contact,
day_of_week, campaign.cat, pdays, season, poutcome),
family="binomial" (link="logit"))
summary(housingModel.new)
pR2(housingModel.new)
testProbs <- data.frame(Outcome = as.factor(housingTest$y_numeric),
Probs = predict(housingModel.new, housingTest, type= "response"))
testProbs <-
testProbs %>%
mutate(predOutcome  = as.factor(ifelse(testProbs$Probs > 0.5 , 1, 0)))
caret::confusionMatrix(testProbs$predOutcome, testProbs$Outcome,
positive = "1")
summary(housingModel.new)
rm(list=ls())
